apply plugin: 'com.android.library'


android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {  //this one may not be needed. But wont hurt.
        androidTest.setRoot('src/androidTest')
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

task makeJar(type: Copy) {
    delete 'build/libs/mysdk.jar'
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'mysdk.jar')
}

makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    task.exclude '**/BuildConfig.class'
    task.exclude '**/R.class'
    task.exclude '**/R$*.class'
    artifacts.add('archives', task);
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api 'com.squareup.okhttp3:okhttp:3.8.1'
    api 'com.alibaba:fastjson:1.2.37'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:3.1.4"
    testImplementation 'org.mockito:mockito-core:1.10.19'
}
